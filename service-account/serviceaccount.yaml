---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-pipeline
  namespace: mutatingwh
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-pipeline-secret
  namespace: mutatingwh
  annotations:
    kubernetes.io/service-account.name: gitlab-pipeline
type: kubernetes.io/service-account-token


---
# clusterrole-and-clusterrolebinding.yaml
#Updated permissions based on RBAC in helm-template.yaml generated and confirmed with Datadog.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-pipeline-mutatingwh-clusterrole
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "pods", "nodes", "namespaces", "componentstatuses", "limitranges"]
  verbs: ["get", "list",  "watch"]

- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch", "create"]

- apiGroups: ["quota.openshift.io"]
  resources: ["clusterresourcequotas"]
  verbs: ["get", "list"]


- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "patch", "update"]

- apiGroups: ["crd.projectcalico.org"]
  resources: ["globalnetworkpolicies"]
  verbs: ["get", "list", "create", "patch"]

#Changes made due to errors in NPR mutatingwh upgrade
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "update", "create"]

- apiGroups: [""]
  resources: ["replicationcontrollers"]
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["list", "watch"]


- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["list", "watch", "create", "update"]


- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "create", "update"]

- apiGroups: [""]
  resources: ["persistentvolumeclaims", "persistentvolumes", "serviceaccounts"]
  verbs: ["get", "list",  "watch"]


- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch"]

#Changes made due to errors in NPR mutatingwh upgrade 
- apiGroups: ["extensions"]
  resources: ["daemonsets", "deployments", "replicasets"]
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses", "networkpolicies"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "watch", "create", "patch"]

- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["autoscaling.k8s.io"]
  resources: ["verticalpodautoscalers"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "list", "create", "patch"]

- apiGroups: ["security.openshift.io"]
  resources: ["securitycontextconstraints"]
  resourceNames: ["mutatingwh", "hostaccess", "privileged", "mutatingwh-cluster-agent", "hostnetwork"]
  verbs: ["use"]

- nonResourceURLs: ["/metrics", "/metrics/slis"]
  verbs: ["get"]

#Added based on errors thrown while deploying

- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-pipeline-mutatingwh-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-pipeline-mutatingwh-clusterrole
subjects:
- kind: ServiceAccount
  name: gitlab-pipeline
  namespace: mutatingwh

#Granting full access to secrets in mutatingwh namespace since its required by Helm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: mutatingwh
  name: gitlab-pipeline-mutatingwh-secret-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "patch","update", "delete"]


---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-pipeline-mutatingwh-secret-rolebinding
  namespace: mutatingwh
subjects:
- kind: ServiceAccount
  name: gitlab-pipeline
  namespace: mutatingwh
roleRef:
  kind: Role
  name: gitlab-pipeline-mutatingwh-secret-role
  apiGroup: rbac.authorization.k8s.io

#Granting full access to secrets in gitlab namespace since its required by Helm
# ---
#   apiVersion: rbac.authorization.k8s.io/v1
#   kind: Role
#   metadata:
#     namespace: gitlab
#     name: gitlab-ns-secrets-role
#   rules:
#   - apiGroups: [""]
#     resources: ["secrets"]
#     verbs: ["get", "list", "watch", "create", "patch","update", "delete"]

# ---
#   apiVersion: rbac.authorization.k8s.io/v1
#   kind: RoleBinding
#   metadata:
#     name: gitlab-ns-secrets-rolebinding
#     namespace: gitlab
#   subjects:
#   - kind: ServiceAccount
#     name: gitlab-pipeline
#     namespace: mutatingwh
#   roleRef:
#     kind: Role
#     name: gitlab-ns-secrets-role
#     apiGroup: rbac.authorization.k8s.io

#Granting access to create resources in mutatingwh namespace
#Added based on errors thrown while deploying
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: mutatingwh
  name: gitlab-pipeline-mutatingwh-role
rules:
# - apiGroups: ["rbac.authorization.k8s.io"]
#   resources: ["roles", "rolebindings"]
#   verbs: ["get", "list", "watch", "create", "patch","update",]

- apiGroups: ["apps"]
  resources: ["daemonsets", "deployments"]
  verbs: ["get", "list", "watch", "create", "patch","update",]

- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "patch","update"]

- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "create", "patch"]

- apiGroups: [""]
  resources: ["serviceaccounts", "services"]
  verbs: ["create", "patch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "list", "create", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-pipeline-mutatingwh-rolebinding
  namespace: mutatingwh
subjects:
- kind: ServiceAccount
  name: gitlab-pipeline
  namespace: mutatingwh
roleRef:
  kind: Role
  name: gitlab-pipeline-mutatingwh-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-view-nodes
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-view-nodes-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-view-nodes
subjects:
  - kind: ServiceAccount
    name: default
    namespace: gitlab  # Ensure this matches the namespace where GitLab is running
